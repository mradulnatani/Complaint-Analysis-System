classDiagram
    class IPCSection {
        +section: str
        +keywords: str
    }

    class TextPreprocessing {
        +lemmatizer: WordNetLemmatizer
        +stop_words: set
        +preprocess_text(text: str): str
        +download_nltk_resources()
    }

    class VectorizationProcessor {
        +vectorizer: TfidfVectorizer
        +ipc_vectors: matrix
        +transform_text(text: str): matrix
        +configure_vectorizer()
    }

    class SimilarityCalculator {
        +calculate_cosine_similarity(complaint_vector: matrix, ipc_vectors: matrix): float[]
    }

    class FuzzyMembershipSystem {
        +score: ctrl.Antecedent
        +membership: ctrl.Consequent
        +membership_ctrl: ctrl.ControlSystem
        +define_membership_functions()
        +create_fuzzy_rules()
        +compute_fuzzy_membership(score: float): float
        +setup_control_system()
    }

    class ComplaintAnalyzer {
        +ipc_sections: List[IPCSection]
        +analyze_complaint(complaint_text: str): Dict
        +find_applicable_sections(similarity_scores: float[]): List[Tuple]
        +process_similarity_scores(scores: float[]): List[str]
    }

    class MainApplication {
        +run()
        +get_user_input(): str
        +display_results(results: Dict)
    }

    class KnowledgeBase {
        +ipc_sections: List[Dict]
        +load_sections()
        +update_sections(new_sections: List[Dict])
    }

    TextPreprocessing --> ComplaintAnalyzer: preprocesses text
    VectorizationProcessor --> ComplaintAnalyzer: vectorizes text
    SimilarityCalculator --> ComplaintAnalyzer: calculates similarities
    FuzzyMembershipSystem --> ComplaintAnalyzer: determines applicability
    ComplaintAnalyzer --> IPCSection: references sections
    KnowledgeBase --> ComplaintAnalyzer: provides IPC sections
    MainApplication --> ComplaintAnalyzer: uses for analysis
